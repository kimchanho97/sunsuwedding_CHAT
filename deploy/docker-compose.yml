version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - app-network

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    hostname: kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_INTERNAL_HOST}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: >
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
      --save 60 1000
      --appendonly no
      --replicaof no one
    volumes:
      - redis-data:/data
    networks:
      - app-network

  app:
    image: ${DOCKER_USERNAME}/sunsuwedding-chat:latest
    container_name: chat-app
    restart: always
    ports:
      - "8080:8080"
    environment:
      MONGODB_URI: ${MONGODB_URI}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_INTERNAL_HOST: ${KAFKA_INTERNAL_HOST}
      BACKEND_API_BASE_URL: ${BACKEND_API_BASE_URL}
      CURRENT_SERVER_URL: ${CURRENT_SERVER_URL}
    depends_on:
      - redis
      - kafka
      - zookeeper
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
    driver: local